# -*- cperl -*-
#
# beginnings of async test script
#

#*  uses
#
use DBI;
use DBD::Pg	':async';

#*  constants
#
use constant CONNSPEC =>	'dbi:Pg:host=dbdpg-18793d83-dbdpg-test.l.aivencloud.com port=10056 dbname=defaultdb user=avnadmin password=XXXXXXXXXXXXXXXXXX';

#*  subs
#
sub msg
{
    my $msg;

    $msg = sprintf($_[0], @_[1 .. $#_]);
    print STDERR ($msg, "\n");
}

sub wait_for
{
    my ($fd, $what) = @_;
    my ($rin, $win, $vec, $nf);
    
    vec($vec, $fd, 1) = 1;
    if ($what == PG_ASYNC_CONN_READ) {
        $rin = $vec;
    } else {
        $win = $vec;
    }

    $nf = select($rin, $win, undef, undef);
    msg('select returned %d', $nf);
}

sub wait_for_query
{
    my $dbh = $_[0];
    my ($fd, $rc);

    $fd = $$dbh{pg_socket};
    do {
        wait_for($fd, PG_ASYNC_CONN_READ);
        $rc = $dbh->pg_ready();
    } until $rc;

    $dbh->pg_result();
}

sub make_cspec
{
    my $acct = $_[0];
    my ($fh, $rc);

    $rc = open($fh, '<', $acct);
    die("open $acct: $!") unless $rc;

    return join(' ', map { chomp; join('=', split) } <$fh>);
}

sub dbh_connect
{
    my $acct = $_[0];
    my ($cs, $fd, $dbh, $rc);
    
    msg('connecting');

    $cs = make_cspec($acct);
    $dbh = DBI->connect($cs, '', '',
                               {
                                RaiseError => 1,
                                pg_server_prepare => 1,
                                pg_async_connect => 1});
    $fd = $$dbh{pg_socket};

    do {
        $rc = $dbh->pg_continue_async_connect();
        msg('continue async connect %d', $rc);
        wait_for($fd, $rc) if $rc;
    } while $rc;

    msg('connected');

    return $dbh;
}

#*  main
#
{
    my ($dbh, $sth, $row);
    
#    DBI->trace(15);
    $dbh = dbh_connect('../../pg-conn');

    $sth = $dbh->prepare('select * from the_table where name = ?', { pg_async => 1 });
    $sth->execute('Ludwig');
    wait_for_query($dbh);

    while ($row = $sth->fetchrow_arrayref()) {
        print("@$row", "\n");
    }
}
